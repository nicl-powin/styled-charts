[{"/Users/niclembck/Powin/20 - Styled Charts App/web/styled-charts/src/reportWebVitals.js":"1","/Users/niclembck/Powin/20 - Styled Charts App/web/styled-charts/src/App.js":"2","/Users/niclembck/Powin/20 - Styled Charts App/web/styled-charts/src/components/StyledLineChart/StyledLineChart.js":"3","/Users/niclembck/Powin/20 - Styled Charts App/web/styled-charts/src/components/Upload/Upload.js":"4","/Users/niclembck/Powin/20 - Styled Charts App/web/styled-charts/src/components/ChartForm/ChartForm.js":"5","/Users/niclembck/Powin/20 - Styled Charts App/web/styled-charts/src/components/Drawer/Drawer.js":"6","/Users/niclembck/Powin/20 - Styled Charts App/web/styled-charts/src/utils/chartData.utils.js":"7"},{"size":362,"mtime":1608233135369,"results":"8","hashOfConfig":"9"},{"size":3102,"mtime":1608672999613,"results":"10","hashOfConfig":"9"},{"size":2249,"mtime":1608583882985,"results":"11","hashOfConfig":"9"},{"size":2490,"mtime":1608577020473,"results":"12","hashOfConfig":"9"},{"size":3020,"mtime":1608671932169,"results":"13","hashOfConfig":"9"},{"size":809,"mtime":1608665531730,"results":"14","hashOfConfig":"9"},{"size":253,"mtime":1608673147523,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"9eig7e",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/niclembck/Powin/20 - Styled Charts App/web/styled-charts/src/reportWebVitals.js",[],["33","34"],"/Users/niclembck/Powin/20 - Styled Charts App/web/styled-charts/src/App.js",["35","36","37"],"import React, { useState, useEffect } from 'react';\nimport _ from 'lodash';\nimport styled from 'styled-components';\n\nimport './App.css';\n\nimport { ReactComponent as PowinLogo } from './powin.svg';\nimport StyledLineChart from './components/StyledLineChart/StyledLineChart';\nimport Upload from './components/Upload/Upload';\nimport ChartForm from './components/ChartForm/ChartForm';\nimport Drawer from './components/Drawer/Drawer';\n\nimport { getFormattedHeaders } from './utils/chartData.utils';\n\nconst App = () => {\n  const [ uploadedData, setUploadedData ] = useState([]);\n  const [ isUploading, setIsUploading ] = useState(false);\n  const [ customParams, setCustomParams ] = useState({});\n  const [ formIsOpen, setFormIsOpen ] = useState(false);\n  const [ chartHeaders, setChartHeaders ] = useState([]);\n\n  useEffect(() => {\n    const formattedHeaders = getFormattedHeaders(uploadedData);\n    setChartHeaders(formattedHeaders)\n  }, [uploadedData])\n\n  const handleUpload = data => {\n    const chartData = _.map(data, row => row.data);\n    setUploadedData(chartData)\n  };\n\n  const updateChart = data => {\n    setCustomParams(data);\n    setFormIsOpen(false);\n  };\n\n  return (\n    <Container>\n      <Left>\n        <LogoContainer>\n          <PowinLogo />\n        </LogoContainer>\n        <h2>Chart Formatting Tool</h2>\n        <Description>\n          This tool is intended to ensure quality and continuity of all Powin charts. To get started, upload a CSV file using the button above.\n        </Description>\n        <Upload handleUpload={ handleUpload } />\n        { !_.isEmpty(uploadedData) &&\n          <Button onClick={ () => setFormIsOpen(true) }>\n            Configure Chart\n          </Button>\n        }\n      </Left>\n      <Flex>\n        { !_.isEmpty(uploadedData)\n          ? <StyledLineChart\n              uploadedData={ uploadedData }\n              chartHeaders={ chartHeaders }\n              customParams={ customParams }\n            />\n          : <Default>Upload a CSV to visualize data</Default>\n        }\n      </Flex>\n\n      <Drawer\n        isOpen={ formIsOpen }\n        handleClose={ () => setFormIsOpen(false) }\n      >\n        <ChartForm\n          onSubmit={ updateChart }\n          onCancel={ () => setFormIsOpen(false) }\n          chartHeaders={ chartHeaders }\n          data={ uploadedData }\n        />\n      </Drawer>\n    </Container>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  padding: 20px;\n`;\nconst Left = styled.div`\n  width: 250px;\n`;\nconst LogoContainer = styled.div`\n  margin-bottom: 25px;\n`;\nconst Description = styled.p`\n  margin-bottom: 15px;\n`;\nconst Button = styled.button`\n  border: 1px solid #ccc;\n  box-shadow: 0 2px 2px rgba(0, 0, 0, .2);\n  background-color: #fff;\n  cursor: pointer;\n  padding: 5px 10px;\n  margin-top: 15px;\n`;\nconst Flex = styled.div`\n  flex: 1;\n  display: flex;\n  padding-left: 20px;\n`;\nconst Default = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n  background-color: #f5f5f5;\n  border-radius: 15px;\n`;\nconst FormContainer = styled.div`\n  margin-top: 20px\n`;","/Users/niclembck/Powin/20 - Styled Charts App/web/styled-charts/src/components/StyledLineChart/StyledLineChart.js",["38","39"],"/Users/niclembck/Powin/20 - Styled Charts App/web/styled-charts/src/components/Upload/Upload.js",["40","41"],"/Users/niclembck/Powin/20 - Styled Charts App/web/styled-charts/src/components/ChartForm/ChartForm.js",["42"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport _ from 'lodash';\n\nconst ChartForm = ({ data, chartHeaders, onSubmit, onCancel }) => {\n\tconst [ hasTitle, setHasTitle ] = useState(false);\n\tconst [ title, setTitle ] = useState('');\n\tconsole.log('data', data);\n\n\tconst handleSubmit = () => {\n\t\tconsole.log('submit');\n\t\tonSubmit({\n\t\t\ttitle: {\n\t\t\t\tdisplay: hasTitle,\n\t\t\t\ttext: title\n\t\t\t}\n\t\t});\n\t};\n\n\tconst renderHeaderList = headers => {\n\t\tconst handleUpdateHeader = data => {\n\n\t\t};\n\n\t\treturn _.map(headers, header => {\n\t\t\treturn (\n\t\t\t\t<ListSection key={ header.value }>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<SectionTitle>{ header.value }</SectionTitle>\n\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tchecked={ true }\n\t\t\t\t\t\t\t\t\tonChange={ () => console.log('Changed') }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Label>Display</Label>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</InputContainer>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<SectionContent>\n\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Label>Label</Label>\n\t\t\t\t\t\t\t\t<Input type=\"text\" value={ header.label } />\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</InputContainer>\n\t\t\t\t\t</SectionContent>\n\t\t\t\t</ListSection>\n\t\t\t);\n\t\t});\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t<h2>Chart Customization</h2>\n\t\t\t<Section>\n\t\t\t\t<h4>Chart Title</h4>\n\t\t\t\t<InputContainer>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tchecked={ hasTitle }\n\t\t\t\t\t\t\tonChange={ () => setHasTitle(!hasTitle) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Label>Display Chart Title</Label>\n\t\t\t\t\t</Row>\n\t\t\t\t</InputContainer>\n\t\t\t\t{ hasTitle &&\n\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t<Label>Chart Title</Label>\n\t\t\t\t\t\t<Input type=\"text\" onChange={ e => setTitle(e.target.value) } />\n\t\t\t\t\t</InputContainer>\n\t\t\t\t}\n\t\t\t</Section>\n\t\t\t<Section>\n\t\t\t\t<h4>Data Headers</h4>\n\t\t\t\t{ renderHeaderList(chartHeaders) }\n\t\t\t</Section>\n\t\t\t<ButtonRow>\n\t\t\t\t<CancelButton onClick={ onCancel }>Cancel</CancelButton>\n\t\t\t\t<SubmitButton type=\"submit\" onClick={ handleSubmit }>Submit</SubmitButton>\n\t\t\t</ButtonRow>\n\t\t</Container>\n\t);\n};\n\nexport default ChartForm;\n\nconst Container = styled.div`\n\tpadding: 10px;\n`;\nconst Row = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n`;\nconst Section = styled.div`\n\tmargin: 15px 0;\n\tpadding: 15px 0;\n\tborder-bottom: 1px solid #d0d0d0;\n`;\nconst SectionTitle = styled.div`\n\tfont-size: 13px;\n\tfont-weight: 600;\n\tflex: 1;\n`;\nconst SectionContent = styled.div`\n\tpadding: 10px;\n`;\nconst InputContainer = styled.div`\n\n`;\nconst Label = styled.div`\n\tfont-size: 14px;\n\tcolor: #909090;\n\tmargin: 0 5px 0 0;\n`;\nconst Input = styled.input`\n\tborder: 1px solid #ddd;\n\tpadding: 5px 10px;\n\twidth: 100%;\n`;\nconst ListSection = styled.div`\n\tmargin-bottom: 10px;\n`;\nconst ButtonRow = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tmargin-top: 15px;\n`;\nconst CancelButton = styled.button`\n\tborder: none;\n\tbackground-color: #d0d0d0;\n\tpadding: 5px 10px;\n\tcolor: #333;\n\tcursor: pointer;\n\tmargin-right: 5px;\n`;\nconst SubmitButton = styled.button`\n\tborder: none;\n\tbox-shadow: 0 2px 2px rgba(0, 0, 0, .2);\n\tbackground-color: #00bf91;\n\tpadding: 5px 10px;\n\tcolor: #fff;\n\tcursor: pointer;\n`;","/Users/niclembck/Powin/20 - Styled Charts App/web/styled-charts/src/components/Drawer/Drawer.js",[],"/Users/niclembck/Powin/20 - Styled Charts App/web/styled-charts/src/utils/chartData.utils.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":17,"column":11,"nodeType":"49","messageId":"50","endLine":17,"endColumn":22},{"ruleId":"47","severity":1,"message":"51","line":17,"column":24,"nodeType":"49","messageId":"50","endLine":17,"endColumn":38},{"ruleId":"47","severity":1,"message":"52","line":117,"column":7,"nodeType":"49","messageId":"50","endLine":117,"endColumn":20},{"ruleId":"53","severity":1,"message":"54","line":65,"column":5,"nodeType":"55","endLine":65,"endColumn":19,"suggestions":"56"},{"ruleId":"47","severity":1,"message":"57","line":66,"column":6,"nodeType":"49","messageId":"50","endLine":66,"endColumn":16},{"ruleId":"47","severity":1,"message":"58","line":9,"column":11,"nodeType":"49","messageId":"50","endLine":9,"endColumn":23},{"ruleId":"47","severity":1,"message":"59","line":9,"column":25,"nodeType":"49","messageId":"50","endLine":9,"endColumn":40},{"ruleId":"47","severity":1,"message":"60","line":21,"column":9,"nodeType":"49","messageId":"50","endLine":21,"endColumn":27},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'isUploading' is assigned a value but never used.","Identifier","unusedVar","'setIsUploading' is assigned a value but never used.","'FormContainer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array. You can also do a functional update 'setOptions(o => ...)' if you only need 'options' in the 'setOptions' call.","ArrayExpression",["63"],"'chartImage' is assigned a value but never used.","'uploadedFile' is assigned a value but never used.","'setUploadedFile' is assigned a value but never used.","'handleUpdateHeader' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [customParams, options]",{"range":"66","text":"67"},[1318,1332],"[customParams, options]"]